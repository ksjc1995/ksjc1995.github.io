{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","VisitingCard","props","flip","VisitingCardFront","VisitingCardBack","Initials","Name","Role","Flip","Email","Phone","Location","Footer","Flex","FlexWrap","Copied","span","Back","App","useState","isFlipped","setIsFlipped","copied","setCopied","startGame","setStartGame","useEffect","slice","call","document","querySelectorAll","forEach","audio","muted","handleFlip","handleCopy","setTimeout","FlipComponent","onClick","className","title","text","onCopy","CopyOutlined","style","fontSize","paddingLeft","href","download","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1e4085d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport ChromeDinoGame from \"react-chrome-dino\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  perspective: 1000px;\n  font-family: \"VT323\", sans-serif;\n  background-color: #1c1c1c;\n\n  div {\n    line-height: 1.2;\n  }\n`;\n\nconst VisitingCard = styled.div`\n  height: 450px;\n  width: 320px;\n  position: relative;\n  transform-style: preserve-3d;\n  box-sizing: border-box;\n\n  .back,\n  .front {\n    z-index: 2;\n    box-sizing: border-box;\n    height: 100%;\n    width: 100%;\n    display: block;\n    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\n    padding: 32px;\n    position: absolute;\n    border-radius: 4px;\n    backface-visibility: hidden;\n    transform-style: preserve-3d;\n    transition: -webkit-transform ease 1000ms;\n    transition: transform ease 1000ms;\n    color: #ebebeb;\n    background: #2d2d2e;\n  }\n\n  .front {\n    transform: ${(props) => props.flip && `rotateY(180deg)`};\n  }\n\n  .back {\n    transform: ${(props) => props.flip && `rotateY(0deg)`};\n  }\n\n  a {\n    padding-left: 8px;\n    color: #66adff;\n    position: relative;\n    font-size: 18px;\n    img {\n      position: relative;\n      top: 2.5px;\n      margin-left: 8px;\n    }\n  }\n\n  a:first-child {\n    padding-left: 0;\n  }\n`;\n\nconst VisitingCardFront = styled.div`\n  transform: rotateY(0deg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst VisitingCardBack = styled.div`\n  transform: rotateY(-180deg);\n`;\n\nconst Initials = styled.div`\n  padding: 0;\n  margin: 0;\n  text-align: center;\n  font-size: 108px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    cursor: pointer;\n  }\n`;\n\nconst Name = styled.div`\n  margin-top: 32px;\n  font-size: 48px;\n`;\n\nconst Role = styled.div`\n  font-size: 20px;\n  margin-bottom: 64px;\n`;\n\nconst Flip = styled.div`\n  text-align: right;\n  font-size: 20px;\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst Email = styled.div`\n  margin-top: 8px;\n  font-size: 20px;\n`;\n\nconst Phone = styled.div`\n  font-size: 20px;\n`;\n\nconst Location = styled.div`\n  font-size: 20px;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n\n  span {\n    float: right;\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  height: calc(100% - 20px);\n`;\n\nconst FlexWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Copied = styled.span`\n  color: #66adff;\n  font-size: 18px;\n  padding: 0 8px;\n  border: 1px solid #66adff;\n`;\n\nconst Back = styled.div`\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nfunction App() {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [startGame, setStartGame] = useState(false);\n\n  useEffect(() => {\n    [].slice.call(document.querySelectorAll(\"audio\")).forEach(function (audio) {\n      audio.muted = true;\n    });\n  }, []);\n\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  const FlipComponent = () => <Flip onClick={handleFlip}>Flip</Flip>;\n\n  return (\n    <Container>\n      <VisitingCard flip={isFlipped}>\n        <VisitingCardFront className=\"front\">\n          {!startGame ? (\n            <FlipComponent />\n          ) : (\n            <Back onClick={() => setStartGame(false)}>{\"<- \"}Back</Back>\n          )}\n          {!startGame ? (\n            <Initials className=\"initials\">\n              <span\n                title={\"Click to play dino!\"}\n                onClick={() => setStartGame(true)}\n              >\n                KS\n              </span>\n            </Initials>\n          ) : (\n            <>\n              <ChromeDinoGame />\n              <br />\n              Instructions:\n              <br />\n              <br />\n              1) Press Space to Jump.\n              <br />\n              2) Press enter to restart after game is over!\n            </>\n          )}\n        </VisitingCardFront>\n        <VisitingCardBack className=\"back\">\n          <FlexWrap>\n            {copied ? <Copied>Copied!</Copied> : \"\"}\n            <FlipComponent />\n          </FlexWrap>\n          <Flex>\n            <div>\n              <Name>Kartik Sharma</Name>\n              <Role>Software Engineer</Role>\n              <Email>\n                Email:- ks.jc1995@gmail.com\n                <span title={\"Copy\"}>\n                  <CopyToClipboard\n                    text=\"ks.jc1995@gmail.com\"\n                    onCopy={handleCopy}\n                  >\n                    <CopyOutlined style={{ fontSize: 12, paddingLeft: 8 }} />\n                  </CopyToClipboard>\n                </span>\n              </Email>\n              <Phone>\n                Phone:- +917018938106\n                <span title={\"Copy\"}>\n                  <CopyToClipboard onCopy={handleCopy} text=\"+917018938106\">\n                    <CopyOutlined style={{ fontSize: 12, paddingLeft: 8 }} />\n                  </CopyToClipboard>\n                </span>\n              </Phone>\n              <Location>Location:- India</Location>\n            </div>\n            <Footer>\n              <a\n                href=\"https://github.com/ksjc1995/ksjc1995.github.io/raw/master/kartik_sharma.pdf\"\n                download\n              >\n                Resume\n              </a>\n              <span>\n                <a\n                  href=\"https://www.linkedin.com/in/kartik-sharma-742b4867/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  LinkedIn\n                </a>\n                <a\n                  href=\"https://github.com/ksjc1995\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Github\n                </a>\n              </span>\n            </Footer>\n          </Flex>\n        </VisitingCardBack>\n      </VisitingCard>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}